language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc-4.9
      env: C_COMPILER=gcc-4.9 CXX_COMPILER=g++-4.9
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: [g++-4.9, libopenblas-dev, liblapacke-dev]
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc-5
      env: C_COMPILER=gcc-5 CXX_COMPILER=g++-5
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: [g++-5, libopenblas-dev, liblapacke-dev]
    - os: osx
      compiler: gcc-4.9
      env: C_COMPILER=gcc-4.9 CXX_COMPILER=g++-4.9
    - os: osx
      compiler: gcc-5
      env: C_COMPILER=gcc-5 CXX_COMPILER=g++-5

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew update > /dev/null;
      case "$C_COMPILER" in
      "gcc-5")
        brew unlink gcc;
        brew install --force-bottle homebrew/versions/gcc5 --without-multilib;;
      "gcc-4.9")
        brew unlink gcc;
        brew install --force-bottle homebrew/versions/gcc49 --without-multilib;;
      esac;
    fi
  - if [ "$C_COMPILER" != "" ]; then export CC=$C_COMPILER; fi
  - if [ "$CXX_COMPILER" != "" ]; then export CXX=$CXX_COMPILER; fi
  - $CC -v

install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew install makedepend;
      brew install --cc=$CC openmpi --without-fortran;
      brew install --force-bottle homebrew/science/opencv3;
      sed -i "" 's/ || defined __APPLE__//g' /usr/local/opt/opencv3/include/opencv2/core/base.hpp;
    fi
  - if [ ! $(command -v mpic++) ]; then
      travis_retry wget --no-check-certificate https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.1.tar.gz;
      tar -xzf ./openmpi-1.10.1.tar.gz;
      cd openmpi-1.10.1;
      ./configure --prefix=$HOME/mpi --disable-mpi-fortran --disable-oshmem > /dev/null;
      make -j2 all > /dev/null;
      make install > /dev/null;
      cd ..;
      export PATH=$HOME/mpi/bin:$PATH;
    fi
  - mpic++ -v

before_script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sed -i"" 's/openblas_config.h/cblas.h/g' configure;
      sed -i"" 's/-lopenblas -lm -lpthread/-lopenblas -lm -lpthread -llapacke/g' Makefile;
      mkdir build/release -p;
      cd build/release;
      ../../configure --with-openblas;
    elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      ./configure --with-veclib --with-opencv=/usr/local/opt/opencv3;
    fi

script: make all

